Traceback (most recent call last):
  File "/opt/anaconda3/envs/lectures2025/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/anaconda3/envs/lectures2025/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/opt/anaconda3/envs/lectures2025/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/anaconda3/envs/lectures2025/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/opt/anaconda3/envs/lectures2025/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/opt/anaconda3/envs/lectures2025/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/opt/anaconda3/envs/lectures2025/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/anaconda3/envs/lectures2025/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# import matplotlib, plot the distributions
import matplotlib.pyplot as plt

fig, axs = plt.subplots(1, 3, figsize=(10, 3))

# part 1 distributions
axs[0].hist(rands_p1[0], bins=100, color='r', alpha=0.8, label='n={}'.format(n_p1[0]))
axs[0].hist(rands_p1[1], bins=100, color='b', alpha=0.2, label='n={}'.format(n_p1[1]))

# part 2 distributions
axs[1].hist(rands_p2[0], bins=100, color='g', alpha=0.8, label='n={}'.format(n_p2[0]))
axs[1].hist(rands_p2[1], bins=100, color='orange', alpha=0.2, label='n={}'.format(n_p2[1]))

# part 3 distributions
axs[2].hist(rands_p3[0], bins=100, color='magenta', alpha=0.8, label='n={}'.format(n_p3[0]))
axs[2].hist(rands_p3[1], bins=100, color='teal', alpha=0.2, label='n={}'.format(n_p3[1]))

# set axis/plot parameters
for a in range(len(axs)):
    axs[a].set_xlabel('Random number value', fontsize=12)
    axs[a].set_ylabel('N', fontsize=12)
    axs[a].set_yscale('log')
    axs[a].legend(fontsize=8)

plt.tight_layout(h_pad=0)
plt.show()
------------------


[31m---------------------------------------------------------------------------[39m
[31mModuleNotFoundError[39m                       Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[5][39m[32m, line 2[39m
[32m      1[39m [38;5;66;03m# import matplotlib, plot the distributions[39;00m
[32m----> [39m[32m2[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mmatplotlib[39;00m[34;01m.[39;00m[34;01mpyplot[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mplt[39;00m
[32m      4[39m fig, axs = plt.subplots([32m1[39m, [32m3[39m, figsize=([32m10[39m, [32m3[39m))
[32m      6[39m [38;5;66;03m# part 1 distributions[39;00m

[31mModuleNotFoundError[39m: No module named 'matplotlib'

